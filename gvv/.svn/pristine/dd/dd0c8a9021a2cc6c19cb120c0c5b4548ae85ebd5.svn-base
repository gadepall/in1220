{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "corelation_matrix.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M0xsEm806LQ_",
        "outputId": "ab64dc64-a772-4755-f17c-93ce34508101"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "La5pqEMl6wuu",
        "outputId": "26539213-1f81-418c-dbf8-8fea0b2450fe"
      },
      "source": [
        "cd drive/MyDrive/'Colab Notebooks'/'correlation matrix'"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/drive/MyDrive/Colab Notebooks/correlation matrix\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rL_l-2LEAj5i"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6EjR2p696_78"
      },
      "source": [
        "stothram_file = open('aigiri.txt', 'r')\n",
        "stothram_txt = stothram_file.read()\n",
        "stothram_file.close()"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6c_HiX1W7Zwj"
      },
      "source": [
        "slokams = []\n",
        "for sloka in stothram_txt.split('||'):\n",
        "  if not sloka.replace(' ', '').isnumeric() and not sloka == '\\n':\n",
        "    slokams.append( sloka.replace('|', '').replace('\\n', '') )"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wreOS4Tm7iXq"
      },
      "source": [
        "correlation_dict = {}\n",
        "\n",
        "for index, sloka in enumerate(slokams):\n",
        "  temp = []\n",
        "  for words in sloka.split(' '):\n",
        "    for char in words:\n",
        "      temp.append(ord(char))\n",
        "  correlation_dict[ str(index + 1) ] = np.array(temp)"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bhLd2OQ_DY4g"
      },
      "source": [
        "length = [ len(char_array) for char_array in correlation_dict.values() ]\n",
        "max_length = max(length)\n",
        "\n",
        "for key in correlation_dict:\n",
        "  correlation_dict[key] = np.pad(correlation_dict[key], (0, max_length - len(correlation_dict[key])), 'constant') "
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p335ixz7IbnL"
      },
      "source": [
        "df = pd.DataFrame( correlation_dict )\n",
        "corrMatrix = df.corr()\n",
        "corrMatrix.to_excel(\"corrMatrix.xlsx\")"
      ],
      "execution_count": 10,
      "outputs": []
    }
  ]
}